[{"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\index.js":"1","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\methods\\methods.js":"2","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ByLocation.js":"3","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageCategories.js":"4","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageLocations.js":"5","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\App.js":"6","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Assets.js":"7","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\PaginationButtons.js":"8","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\AssetForm.js":"9","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\NavigationBar.js":"10","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageAssets.js":"11","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\NotFound.js":"12","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\reducer\\reducer.js":"13","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Search.js":"14","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\About.js":"15","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ByCategory.js":"16","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Loading.js":"17","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\LocationForm.js":"18","C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\CategoryForm.js":"19"},{"size":202,"mtime":1610110822000,"results":"20","hashOfConfig":"21"},{"size":8491,"mtime":1611060097159,"results":"22","hashOfConfig":"21"},{"size":2150,"mtime":1610128430000,"results":"23","hashOfConfig":"21"},{"size":2704,"mtime":1610213620000,"results":"24","hashOfConfig":"21"},{"size":2698,"mtime":1610340302000,"results":"25","hashOfConfig":"21"},{"size":9343,"mtime":1611059923361,"results":"26","hashOfConfig":"21"},{"size":1488,"mtime":1610186300000,"results":"27","hashOfConfig":"21"},{"size":1009,"mtime":1610179364000,"results":"28","hashOfConfig":"21"},{"size":3544,"mtime":1610199988000,"results":"29","hashOfConfig":"21"},{"size":1639,"mtime":1610105984000,"results":"30","hashOfConfig":"21"},{"size":2686,"mtime":1610965745006,"results":"31","hashOfConfig":"21"},{"size":233,"mtime":1610103932000,"results":"32","hashOfConfig":"21"},{"size":5854,"mtime":1611060138572,"results":"33","hashOfConfig":"21"},{"size":1523,"mtime":1610133344000,"results":"34","hashOfConfig":"21"},{"size":181,"mtime":1610106042000,"results":"35","hashOfConfig":"21"},{"size":2149,"mtime":1610128422000,"results":"36","hashOfConfig":"21"},{"size":135,"mtime":1610111056000,"results":"37","hashOfConfig":"21"},{"size":2454,"mtime":1610220134000,"results":"38","hashOfConfig":"21"},{"size":2455,"mtime":1610215998000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"te6qpe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\index.js",[],["84","85"],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\methods\\methods.js",[],["86","87"],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ByLocation.js",[],["88","89"],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageCategories.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageLocations.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\App.js",["90"],"import { useReducer, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Container, Tabs, Tab, Jumbotron, Pagination } from \"react-bootstrap\";\n\nimport reducer from \"./reducer/reducer\";\nimport {\n  fetchAssets,\n  fetchCategories,\n  fetchLocations,\n  refreshAfterError,\n  fetchFilteredAssets,\n  changeSearchTerm,\n  setPage,\n  addAsset,\n  updateAsset,\n  deleteAsset,\n  fetchFilteredCategories,\n  changeCategorySearchTerm,\n  addCategory,\n  updateCategory,\n  deleteCategory,\n  fetchFilteredLocations,\n  changeLocationSearchTerm,\n  addLocation,\n  updateLocation,\n  deleteLocation,\n} from \"./methods/methods\";\n\nimport NavigationBar from \"./components/NavigationBar\";\nimport About from \"./components/About\";\nimport Search from \"./components/Search\";\nimport PaginationButtons from \"./components/PaginationButtons\";\nimport Assets from \"./components/Assets\";\nimport ByCategory from \"./components/ByCategory\";\nimport ByLocation from \"./components/ByLocation\";\nimport ManageAssets from \"./components/ManageAssets\";\nimport ManageCategories from \"./components/ManageCategories\";\nimport ManageLocations from \"./components/ManageLocations\";\nimport AssetForm from \"./components/AssetForm\";\nimport CategoryForm from \"./components/CategoryForm\";\nimport LocationForm from \"./components/LocationForm\";\nimport NotFound from \"./components/NotFound\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/App.css\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    assets: [],\n    categories: [],\n    locations: [],\n    loading: true,\n    error: null,\n    searchTerm: \"\",\n    filteredAssets: [],\n    numberOfPages: 1,\n    numberOfCatPages: 1,\n    numberOfLocPages: 1,\n    page: 1,\n    categorySearchTerm: \"\",\n    filteredCategories: [],\n    locationSearchTerm: \"\",\n    filteredLocations: [],\n  });\n\n  useEffect(() => {\n    fetchAssets(dispatch);\n    fetchCategories(dispatch);\n    fetchLocations(dispatch);\n  }, []);\n\n  useEffect(() => {\n    fetchFilteredAssets(dispatch, state.searchTerm, state.page);\n  }, [state.searchTerm, state.page]);\n\n  useEffect(() => {\n    fetchFilteredCategories(dispatch, state.categorySearchTerm, state.page);\n  }, [state.categorySearchTerm, state.page]);\n\n  useEffect(() => {\n    fetchFilteredLocations(dispatch, state.locationSearchTerm, state.page);\n  }, [state.locationSearchTerm, state.page]);\n\n  return (\n    <BrowserRouter>\n      <NavigationBar />\n      <Container>\n        <Switch>\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/\">\n            <Tabs defaultActiveKey=\"assets\" id=\"tabs\">\n              <Tab eventKey=\"assets\" title=\"Assets\">\n                <Search\n                  searchTerm={state.searchTerm}\n                  dispatch={dispatch}\n                  changeSearchTerm={changeSearchTerm}\n                />\n                <Assets\n                  assets={state.filteredAssets}\n                  loading={state.loading}\n                  error={state.error}\n                  dispatch={dispatch}\n                  refreshAfterError={refreshAfterError}\n                />\n                <Jumbotron>\n                  <PaginationButtons\n                    numberOfPages={state.numberOfPages}\n                    page={state.page}\n                    setPage={setPage}\n                    dispatch={dispatch}\n                  />\n                </Jumbotron>\n              </Tab>\n              <Tab eventKey=\"by-category\" title=\"ByCategory\">\n                <ByCategory\n                  assets={state.assets}\n                  categories={state.filteredCategories}\n                  loading={state.loading}\n                  error={state.error}\n                />\n                <Jumbotron>\n                  <PaginationButtons\n                    numberOfPages={state.numberOfCatPages}\n                    page={state.page}\n                    setPage={setPage}\n                    dispatch={dispatch}\n                  />\n                </Jumbotron>\n              </Tab>\n              <Tab eventKey=\"by-location\" title=\"ByLocation\">\n                <ByLocation\n                  assets={state.assets}\n                  locations={state.filteredLocations}\n                  loading={state.loading}\n                  error={state.error}\n                />\n                <Jumbotron>\n                  <PaginationButtons\n                    numberOfPages={state.numberOfLocPages}\n                    page={state.page}\n                    setPage={setPage}\n                    dispatch={dispatch}\n                  />\n                </Jumbotron>\n              </Tab>\n            </Tabs>\n          </Route>\n\n          <Route path=\"/assets\">\n            <ManageAssets\n              assets={state.filteredAssets}\n              loading={state.loading}\n              error={state.error}\n              dispatch={dispatch}\n              refreshAfterError={refreshAfterError}\n              searchTerm={state.searchTerm}\n              changeSearchTerm={changeSearchTerm}\n              deleteAsset={deleteAsset}\n            />\n            <Jumbotron>\n              <PaginationButtons\n                numberOfPages={state.numberOfPages}\n                page={state.page}\n                setPage={setPage}\n                dispatch={dispatch}\n              />\n            </Jumbotron>\n          </Route>\n\n          <Route\n            path=\"/asset\"\n            exact\n            render={(props) => (\n              <AssetForm\n                {...props}\n                create={true}\n                categories={state.categories}\n                locations={state.locations}\n                dispatch={dispatch}\n                addAsset={addAsset}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/asset/:id\"\n            render={(props) => (\n              <AssetForm\n                {...props}\n                create={false}\n                assetToUpdate={state.assets.find(\n                  (x) => x._id === props.match.params.id\n                )}\n                categories={state.categories}\n                locations={state.locations}\n                dispatch={dispatch}\n                updateAsset={updateAsset}\n              />\n            )}\n          />\n\n          <Route path=\"/categories\">\n            <ManageCategories\n              categories={state.filteredCategories}\n              loading={state.loading}\n              error={state.error}\n              dispatch={dispatch}\n              refreshAfterError={refreshAfterError}\n              searchTerm={state.categorySearchTerm}\n              changeSearchTerm={changeCategorySearchTerm}\n              deleteCategory={deleteCategory}\n            />\n             <Jumbotron>\n                  <PaginationButtons\n                    numberOfPages={state.numberOfCatPages}\n                    page={state.page}\n                    setPage={setPage}\n                    dispatch={dispatch}\n                  />\n                </Jumbotron>\n          </Route>\n\n          <Route\n            path=\"/category\"\n            exact\n            render={(props) => (\n              <CategoryForm\n                {...props}\n                create={true}\n                dispatch={dispatch}\n                addCategory={addCategory}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/category/:id\"\n            render={(props) => (\n              <CategoryForm\n                {...props}\n                create={false}\n                categoryToUpdate={state.categories.find(\n                  (x) => x._id === props.match.params.id\n                )}\n                dispatch={dispatch}\n                updateCategory={updateCategory}\n              />\n            )}\n          />\n\n          <Route path=\"/locations\">\n            <ManageLocations\n              locations={state.filteredLocations}\n              loading={state.loading}\n              error={state.error}\n              dispatch={dispatch}\n              refreshAfterError={refreshAfterError}\n              searchTerm={state.locationSearchTerm}\n              changeSearchTerm={changeLocationSearchTerm}\n              deleteLocation={deleteLocation}\n            />\n            <Jumbotron>\n                <PaginationButtons\n                  numberOfPages={state.numberOfLocPages}\n                  page={state.page}\n                  setPage={setPage}\n                  dispatch={dispatch}\n                />\n              </Jumbotron>\n          </Route>\n\n          <Route\n            path=\"/location\"\n            exact\n            render={(props) => (\n              <LocationForm\n                {...props}\n                create={true}\n                dispatch={dispatch}\n                addLocation={addLocation}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/location/:id\"\n            render={(props) => (\n              <LocationForm\n                {...props}\n                create={false}\n                locationToUpdate={state.locations.find(\n                  (x) => x._id === props.match.params.id\n                )}\n                dispatch={dispatch}\n                updateLocation={updateLocation}\n              />\n            )}\n          />\n\n          <Route path=\"/*\" component={NotFound} />\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n",["91","92"],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Assets.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\PaginationButtons.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\AssetForm.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\NavigationBar.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ManageAssets.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\NotFound.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\reducer\\reducer.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Search.js",[],["93","94"],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\About.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\ByCategory.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\Loading.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\LocationForm.js",[],"C:\\xampp\\htdocs\\liquid\\mern\\mernapp\\client\\src\\components\\CategoryForm.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":43,"nodeType":"105","messageId":"106","endLine":3,"endColumn":53},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},{"ruleId":"97","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar",["111"],["112"],["111"],["112"],"no-global-assign","no-unsafe-negation"]